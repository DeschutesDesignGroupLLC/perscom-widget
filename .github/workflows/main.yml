name: Deploy Widget

on:
  pull_request:
  push:
    branches:
      - master
      - staging

jobs:
  deploy:
    name: Deploy Widget
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Bump Application Version and Tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: patch
          default_prerelease_bump: prerelease
          release_branches: master
          pre_release_branches: staging
          append_to_pre_release_tag: prerelease

      - name: Pull Vercel Environment Information Preview
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Pull Vercel Environment Information Production
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Widget
        if: github.ref == 'refs/heads/staging'
        run: npm run build:widget
        env:
          REACT_APP_WIDGET_VERSION: ${{ steps.tag_version.outputs.new_tag }}

      - name: Build Project Artifacts Preview
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        env:
          REACT_APP_WIDGET_VERSION: ${{ steps.tag_version.outputs.new_tag }}

      - name: Build Project Artifacts Production
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          REACT_APP_WIDGET_VERSION: ${{ steps.tag_version.outputs.new_tag }}

      - name: Deploy Project to Vercel Preview
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project to Vercel Production
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Bump Application Version and Tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: patch
          default_prerelease_bump: prerelease
          release_branches: master
          pre_release_branches: staging
          append_to_pre_release_tag: prerelease

      - name: Install Sentry CLI
        run: npm install -g @sentry/cli

      - name: Upload Sentry Sourcemaps
        run: |
          sentry-cli sourcemaps inject --org deschutes-design-group-llc --project perscom-widget ./build && sentry-cli sourcemaps upload --org deschutes-design-group-llc --project perscom-widget --release ${{ steps.tag_version.outputs.new_tag }} ./build
          sentry-cli sourcemaps inject --org deschutes-design-group-llc --project perscom-widget ./dist && sentry-cli sourcemaps upload --org deschutes-design-group-llc --project perscom-widget --release ${{ steps.tag_version.outputs.new_tag }} ./dist
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}

      - name: Create Sentry Release Staging
        if: github.ref == 'refs/heads/staging'
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: staging
          version: ${{ steps.tag_version.outputs.new_tag }}
          sourcemaps: ./dist ./build/static/js

      - name: Create Sentry Release Production
        if: github.ref == 'refs/heads/master'
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production
          version: ${{ steps.tag_version.outputs.new_tag }}
          sourcemaps: ./dist ./build/static/js

      - name: Create Github Release
        uses: ncipollo/release-action@v1
        if: github.ref == 'refs/heads/master'
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: ${{ steps.tag_version.outputs.new_tag }}
          generateReleaseNotes: true
          makeLatest: true
          token: ${{ secrets.RELEASE_TOKEN }}
